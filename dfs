import java.util.ArrayList;

public class Solution {
    public static ArrayList<ArrayList<Integer>> depthFirstSearch(int v, int e, ArrayList<ArrayList<Integer>> edges) {
        
        ArrayList<ArrayList<Integer>> components = new ArrayList<>();

        ArrayList<Integer> graph[] = new ArrayList[v];
        for(int i = 0; i < v; i++) graph[i] = new ArrayList<>();
        for(int i = 0; i < e; i++){
            int a = edges.get(i).get(0);
            int b = edges.get(i).get(1);
            graph[a].add(b);
            graph[b].add(a);    
        }
        boolean[] vis = new boolean[v];
        for(int i = 0; i < v; i++){
            if(vis[i]== false){
                ArrayList<Integer> comp = new ArrayList<>();
                dfs(i, vis, graph, comp);
                components.add(comp);
            }
        }
        
        return components;
    }
    
    public static void dfs(int src,boolean vis[],  ArrayList<Integer> graph[], ArrayList<Integer> comp){
        comp.add(src);
        vis[src] = true;
        // src k jitne bhi nbr ko visit karege
        if(graph[src] != null)
        for(int nbr : graph[src]){
            if(vis[nbr] == false){
                dfs(nbr, vis, graph, comp);
            }
        }
    }
}