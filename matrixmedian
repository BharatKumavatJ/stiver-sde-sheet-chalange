import java.util.ArrayList;

public class Solution
{
	public static int getMedian(ArrayList<ArrayList<Integer>> mat)
	{
		int n = mat.size();
        int m = mat.get(0).size();
        int ans = 0;
        int left = (n * m)/2;
            
        int l = 1, r = 100000;
        
        while(l <= r){
            int mid = (l + r)/2;
            
            int noOfEleInLeft =  howManyElementsLeftToMid(mat, mid);
            
            if(noOfEleInLeft <= left){
                ans = mid;
                l = mid + 1;
            }else{
                r = mid - 1;
            }
        }
        return ans;
	}
    
    public static int howManyElementsLeftToMid(ArrayList<ArrayList<Integer>> mat, int midd){
        
        int ele = 0;
        
        for(int i = 0; i < mat.size(); i++){
            int l = 0, r = mat.get(i).size() - 1;
             int ans = 0;
            while(l <= r){
               
                int mid = (l + r)/2;
                if(mat.get(i).get(mid) < midd){
                    ans = mid + 1;
                    l = mid + 1;
                }else{
                    r = mid - 1;
                }
            }
            ele += ans;
        }
        return ele;
    }
}