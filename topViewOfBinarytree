/************************************************************

    Following is the TreeNode class structure:

    class BinaryTreeNode {
		int val;
		BinaryTreeNode left;
		BinaryTreeNode right;

		BinaryTreeNode(int val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

************************************************************/
import java.util.*;
class Pair{
    int level; 
    BinaryTreeNode node;
    
    Pair(BinaryTreeNode node, int level){
        this.node = node;
        this.level = level;
    }
}
public class Solution {
	public static ArrayList<Integer> getTopView(BinaryTreeNode root) {
		
        int min = 0, max = 0;
        
        ArrayList<Integer> al = new ArrayList<>();
        if(root == null){
            return al;
        }
        HashMap<Integer, Integer> hm = new HashMap<>();
        Queue<Pair> q = new LinkedList<>();
        q.add(new Pair(root, 0));
        
        while(q.isEmpty() == false){
            Pair temp = q.poll();
            
            min = Math.min(min, temp.level);
            max = Math.max(max, temp.level);
            
            if(hm.containsKey(temp.level) == false){
                hm.put(temp.level, temp.node.val);
            }
            
            if(temp.node.left != null){
                q.add(new Pair(temp.node.left, temp.level - 1));
            }
            if(temp.node.right != null){
                q.add(new Pair(temp.node.right, temp.level + 1));
            }
          
        }
        
        while(min <= max){
            al.add(hm.get(min));
            min++;
        }
                   
        return al; 
	}
}